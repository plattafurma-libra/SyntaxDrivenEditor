Listing:

   1 MODULE TextsCP;
   2 
   3 
   4 IMPORT RTS,Console,texts;
   5 
   6 TYPE Reader* =RECORD eot*:BOOLEAN;eol*:BOOLEAN;
   7                                 filename*:ARRAY 80 OF CHAR; jReader:texts.Texts;
   8                            END;
   9          Writer*= RECORD eot*:BOOLEAN;filename*:ARRAY 80 OF CHAR; END;
  10         
  11          
  12 
  13 PROCEDURE  WriteStringWriter*(W:Writer; Str:ARRAY OF CHAR ); 
  14 
  15 BEGIN
  16         Console.WriteString(Str);
  17 END WriteStringWriter;
  18 
  19 PROCEDURE Write*(ch:CHAR);
  20 BEGIN
  21         IF texts.Texts.ok THEN Console.Write(ch);END;
  22 END Write;
  23 
  24 PROCEDURE  WriteString*(Str:ARRAY OF CHAR ); 
  25 
  26 BEGIN
  27         IF texts.Texts.ok THEN Console.WriteString(Str);END;
  28 END WriteString;
  29 
  30 PROCEDURE  WriteStringLn*(Str:ARRAY OF CHAR ); 
  31  
  32 BEGIN
  33         IF texts.Texts.ok THEN
  34                 Console.WriteString(Str);
  35                 Console.WriteLn();
  36         END;    
  37 END WriteStringLn;
  38 
  39 PROCEDURE WriteInt*(pos:INTEGER; len:INTEGER); 
  40 BEGIN
  41         IF texts.Texts.ok THEN Console.WriteInt(pos,len);
  42         END;
  43 END WriteInt;
  44 
  45 PROCEDURE WriteIntWriter*(W:Writer; pos:INTEGER; len:INTEGER); 
  46 BEGIN
  47         Console.WriteInt(pos,len);
  48         
  49 END WriteIntWriter;
  50 
  51 PROCEDURE WriteLn*(W:Writer); 
  52 BEGIN
  53         IF texts.Texts.ok THEN 
  54                 Console.WriteLn();
  55         END;
  56 END WriteLn;
  57 
  58 PROCEDURE OpenWriter*(W:Writer);
  59 BEGIN
  60         W.eot:=FALSE;
  61         WriteString("OpenWriter");WriteLn();
**** This procedure needs parameters---^
  62         
  63 END OpenWriter;
  64 
  65 
  66 PROCEDURE Pos*(R:Reader):INTEGER;
  67 BEGIN
  68         RETURN 0;
  69 END Pos;
  70 
  71 PROCEDURE OpenReader*(VAR R:Reader);
  72 BEGIN
  73         WriteString("OpenReader "+R.filename);WriteLn();
**** This procedure needs parameters---------------^
  74         NEW(R.jReader); 
  75         R.jReader.open(MKSTR(R.filename));R.eot:=FALSE;
  76 END OpenReader;
  77 
  78 PROCEDURE Read*(VAR R:Reader;VAR ch:CHAR);
  79 BEGIN   
  80                 (* eof error *)
  81                 IF R.jReader.eot THEN 
  82                         WriteString("Texts.Read EOF error for file: "+R.filename);
  83                         RTS.Throw("Texts.Read EOF error");
  84                 ELSE
  85                         ch:=R.jReader.readCharFromFile();
  86                         Write(ch);
  87                         IF (ch=0DX) OR (ch=0AX) THEN R.eol:=TRUE;ch:=' ';
  88                         ELSE R.eol:=FALSE;
  89                         END;
  90                         IF R.jReader.eot THEN 
  91                                 R.eot:=TRUE;    
  92                                 WriteStringLn("Texts.Read eot set true");
  93                         END;
  94                 END;
  95 END Read;
  96 
  97 PROCEDURE Length*(text:ARRAY OF CHAR):INTEGER;
  98 
  99 VAR len:INTEGER;
 100 
 101 BEGIN
 102         len:=0;
 103         WHILE text[len] # 0X DO
 104                 INC(len);
 105         END;
 106         RETURN len;
 107 
 108 END Length;
 109 
 110 BEGIN (*Auto-generated*)
 111         
 112 END TextsCP.

There were:  2 errors, and No warnings


